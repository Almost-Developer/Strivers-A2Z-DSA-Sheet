Balanced Binary Tree

Given a binary tree, determine if it is 
height-balanced

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: true

Example 2:
Input: root = [1,2,2,3,3,null,null,4,4]
Output: false

Example 3:
Input: root = []
Output: true

Constraints:
The number of nodes in the tree is in the range [0, 5000].
-104 <= Node.val <= 104

Solution.
class Solution {
    public int depth(TreeNode root){
        if(root == null) return 0;
        int leftSide = depth(root.left);
        int rightSide = depth(root.right);
        int ans = 1 + Math.max(leftSide, rightSide);
        return ans;
    }

    public boolean isBalanced(TreeNode root) {
        if(root == null) return true;
        boolean left = isBalanced(root.left);
        boolean right = isBalanced(root.right);
        int lh = depth(root.left);
        int rh = depth(root.right);
        if(Math.abs(lh - rh) > 1) return false;
        return left && right;
    }
}
