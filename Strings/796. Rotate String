Rotate String

Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.
A shift on s consists of moving the leftmost character of s to the rightmost position.
For example, if s = "abcde", then it will be "bcdea" after one shift.

Example 1:
Input: s = "abcde", goal = "cdeab"
Output: true

Example 2:
Input: s = "abcde", goal = "abced"
Output: false
 
Constraints:
1 <= s.length, goal.length <= 100
s and goal consist of lowercase English letters.

Solution.
/* Approach:
1. concate the original string with itself
2. so that roatted target string should be in the new long string after rotated
3. check the rotated string is present in the long string or not */

class Solution {
    public boolean rotateString(String s, String goal) {
        String anotherString = s.concat(s);
        if(anotherString.contains(goal) && 
        s.length() == goal.length()) return true;
        return false;
    }
}
